@model WKSADB.TournamentDivision
@using WKSATournament.Extensions

@{
    ViewBag.Title = Model.Division.DivisionName;
}

@section featured {
    @Html.Partial("TournamentStats", (TournamentStats)ViewBag.TournamentStats)
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#hideJudges').click(function () {
            showHideJudges();
        });

        $("input.judge").change(function () {
            var competitorId = this.id.substring(12, this.id.indexOf("]"));
            var judges = new Array();
            var itemName = "#competitors\\[" + competitorId + "\\]\\.";

            judges[0] = new Number($(itemName + "Judge1").val());
            judges[1] = new Number($(itemName + "Judge2").val());
            judges[2] = new Number($(itemName + "Judge3").val());

            // Only use judges 4 and 5 if entered
            if (!isNaN($(itemName + "Judge4").val()) && $(itemName + "Judge4").val() != "" && !isNaN($(itemName + "Judge5").val()) && $(itemName + "Judge5").val() != "") {
                judges[3] = new Number($(itemName + "Judge4").val());
                judges[4] = new Number($(itemName + "Judge5").val());
            }

            var total = new Number();
            $.each(judges, function (index, value) {
                total += value;
            });

            // Remove highest and lowest values if all 5 judges
            if (judges.length == 5) {
                total = total - (Math.max.apply(Math, judges) + Math.min.apply(Math, judges));
            }

            $(itemName + "TotalScore").val(total);
        });

        showHideJudges();
    });

    function showHideJudges() {
        $('#competitors td:nth-child(2),th:nth-child(2),#competitors td:nth-child(3),th:nth-child(3),#competitors td:nth-child(4),th:nth-child(4),#competitors td:nth-child(5),th:nth-child(5),#competitors td:nth-child(6),th:nth-child(6),#competitors td:nth-child(7),th:nth-child(7),').toggle();

        $("input:text:visible:first").focus();
    }
</script>

<h2>@Model.Division.DivisionName</h2>
<div>@Html.ActionLink("Print Result Sheet", "CreateDivisionSheet", "Reports", new { tournamentId = Model.TournamentId, divisionId = Model.DivisionId }, null)</div>
@if (Model.Division.IsOlympicDivision)
{
    <div>@Html.ActionLink("Switch to Olympic View", "EditOlympic", new { id = Model.TournamentId, divisionId = Model.DivisionId })</div>
}
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>TournamentDivision</legend>
        <a id="hideJudges" href="#">Show/Hide Judges</a>
        @Html.HiddenFor(model => model.TournamentId)
        @Html.HiddenFor(model => model.DivisionId)

        <table id="competitors">
            <colgroup align="left"></colgroup>
            <colgroup id="judgesColGroup" width="100px;" span="7"></colgroup>
            <tr>
                <th align="left" style="width:300px;">Competitor Name</th>
                <th align="left">Judge 1</th>
                <th align="left">Judge 2</th>
                <th align="left">Judge 3</th>
                <th align="left">Judge 4</th>
                <th align="left">Judge 5</th>
                <th align="left">Total</th>
                <th align="left">Result</th>
            </tr>

        @foreach (CompetitorDivision competitor in (IEnumerable<CompetitorDivision>)ViewBag.Competitors)
        {
            <tr>
                <td>@string.Format("{0} {1}", competitor.Competitor.Student.FirstName, competitor.Competitor.Student.LastName)</td>
                <td><input type="text" id="competitors[@competitor.CompetitorId].Judge1" name="competitors[@competitor.CompetitorId].Judge1" class="resultTextBox judge" value="@competitor.Judge1.DecimalToString("0.#")" /></td>
                <td><input type="text" id="competitors[@competitor.CompetitorId].Judge2" name="competitors[@competitor.CompetitorId].Judge2" class="resultTextBox judge" value="@competitor.Judge2.DecimalToString("0.#")" /></td>
                <td><input type="text" id="competitors[@competitor.CompetitorId].Judge3" name="competitors[@competitor.CompetitorId].Judge3" class="resultTextBox judge" value="@competitor.Judge3.DecimalToString("0.#")" /></td>
                <td><input type="text" id="competitors[@competitor.CompetitorId].Judge4" name="competitors[@competitor.CompetitorId].Judge4" class="resultTextBox judge" value="@competitor.Judge4.DecimalToString("0.#")" /></td>
                <td><input type="text" id="competitors[@competitor.CompetitorId].Judge5" name="competitors[@competitor.CompetitorId].Judge5" class="resultTextBox judge" value="@competitor.Judge5.DecimalToString("0.#")" /></td>
                <td><input type="text" id="competitors[@competitor.CompetitorId].TotalScore" name="competitors[@competitor.CompetitorId].TotalScore" class="resultTextBoxTotal judge" value="@competitor.TotalScore.DecimalToString("0.#")" readonly /></td>
                <td>
                    @Html.Hidden("competitors.Index", competitor.CompetitorId)
                    @Html.Hidden("competitors[" + competitor.CompetitorId + "].CompetitorId", competitor.CompetitorId)
                    @Html.Hidden("competitors[" + competitor.CompetitorId + "].DivisionId", competitor.DivisionId)
                    @Html.TextBox("competitors[" + competitor.CompetitorId + "].Result", competitor.Result, new { @class = "resultTextBox" })
                    @Html.ValidationMessage("competitors[" + competitor.CompetitorId + "].Result")
                </td>
            </tr>
        }

        </table>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.IsCompleted)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsCompleted)
            @Html.ValidationMessageFor(model => model.IsCompleted)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MedalsReceived)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MedalsReceived)
            @Html.ValidationMessageFor(model => model.MedalsReceived)
        </div>

        <h3>Division Judges:</h3>

        <div id="judges">
            <label>1.</label>
            @Html.EditorFor(model => model.Judge1)
            <label>2.</label>
            @Html.EditorFor(model => model.Judge2)
            <label>3.</label>
            @Html.EditorFor(model => model.Judge3)
            <label>4.</label>
            @Html.EditorFor(model => model.Judge4)
            <label>5.</label>
            @Html.EditorFor(model => model.Judge5)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Details", "Tournament", new { id = Model.TournamentId }, null)
</div>
